services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: scraper
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    command: pnpm start
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/scraper
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    ports:
      - '3001:3001'
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - api
    ports:
      - '3000:3000'
  worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    command: pnpm start
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/scraper
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
volumes:
  pgdata:
  redisdata:
